{"version":3,"sources":["components/Filter.js","components/Persons.js","components/PersonForm.js","services/service.js","components/Notification.js","App.js","index.js"],"names":["Filter","newFilter","filterChange","value","onChange","Persons","filterPerson","deletePerson","map","person","i","name","number","onClick","id","PersonForm","addPerson","newName","newNumber","nameChange","numberChange","onSubmit","type","URL","axios","get","then","res","data","personObject","post","put","delete","Notification","message","messageType","className","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","errorMessage","setErrorMessage","msgType","setMsgType","useEffect","service","response","filter","toLowerCase","includes","event","target","preventDefault","check","find","window","confirm","setTimeout","catch","error","n","console","log","concat","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4afad7d.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ newFilter, filterChange }) => {\n  return (\n    <div>\n      filter: <input value={newFilter} onChange={filterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst Persons = ({ filterPerson, deletePerson }) => {\n  return (\n    <div>\n      {filterPerson.map((person, i) => (\n        <p key={i}>\n          {person.name}: {person.number}{\" \"}\n          <button onClick={() => deletePerson(person.id, person.name)}>\n            Delete\n          </button>\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst PersonForm = ({\n  addPerson,\n  newName,\n  newNumber,\n  nameChange,\n  numberChange,\n}) => {\n  return (\n    <div>\n      <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={nameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={numberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PersonForm;\n","import axios from \"axios\";\n\nconst URL = \"/api/persons\";\n\nconst getAll = () => {\n  const req = axios.get(URL);\n  return req.then((res) => res.data);\n};\n\nconst create = (personObject) => {\n  const req = axios.post(URL, personObject);\n  return req.then((res) => res.data);\n};\n\nconst update = (id, personObject) => {\n  const req = axios.put(`${URL}/${id}`, personObject);\n  return req.then((res) => res.data);\n};\n\nconst remove = (id) => {\n  const req = axios.delete(`${URL}/${id}`);\n  return req.then((res) => res.data);\n};\n\n// eslint-disable-next-line\nexport default { getAll, create, update, remove };\n","import React from \"react\";\n\nconst Notification = ({ message, messageType }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={messageType}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport Persons from \"./components/Persons\";\nimport PersonForm from \"./components/PersonForm\";\nimport service from \"./services/service\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [msgType, setMsgType] = useState(\"\");\n\n  useEffect(() => {\n    service.getAll().then((response) => {\n      setPersons(response);\n    });\n  }, []);\n\n  const nameChange = (event) => {\n    setNewName(event.target.value);\n  };\n  const numberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n  const filterChange = (event) => {\n    setNewFilter(event.target.value);\n  };\n\n  const filterPerson = persons\n    ? persons.filter((person) =>\n        person.name.toLowerCase().includes(newFilter.toLowerCase())\n      )\n    : [];\n\n  const AddPerson = (event) => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    };\n\n    const check = persons.find(\n      (person) => person.name.toLowerCase() === newName.toLowerCase()\n    );\n\n    if (check) {\n      window.confirm(\n        `${newName} is already added to phonebook, replace old number with a new one?`\n      )\n        ? service\n            .update(check.id, personObject)\n            .then((response) => {\n              setPersons(\n                persons.map((person) =>\n                  person.id !== response.id ? person : response\n                )\n              );\n              setMsgType(\"success\");\n              setErrorMessage(`${newName} has been updated`);\n              setTimeout(() => {\n                setErrorMessage(null);\n              }, 3000);\n            })\n            .catch((error) => {\n              setMsgType(\"error\");\n              setErrorMessage(\n                `Information of ${newName} has already been removed from server!`\n              );\n              setTimeout(() => {\n                setErrorMessage(null);\n              }, 3000);\n              setPersons(persons.filter((n) => n.id !== check.id));\n            })\n        : console.log(\"\");\n    }\n\n    service.create({ name: newName, number: newNumber }).then((response) => {\n      setPersons(persons.concat(response));\n    });\n    setNewName(\"\");\n    setNewNumber(\"\");\n    setMsgType(\"success\");\n    setErrorMessage(`Added ${newName}`);\n    setTimeout(() => {\n      setErrorMessage(null);\n    }, 3000);\n  };\n\n  const deletePerson = (id, name) => {\n    window.confirm(`Delete ${name}?`)\n      ? service\n          .remove(id)\n          .then((response) => {\n            if (response.status === 204) {\n              setPersons(persons.filter((person) => person.id !== id));\n              setNewName(\"\");\n              setNewNumber(\"\");\n              setMsgType(\"success\");\n              setErrorMessage(`Deleted ${name}`);\n              setTimeout(() => {\n                setErrorMessage(null);\n              }, 3000);\n            }\n          })\n          .catch((error) => {\n            setMsgType(\"error\");\n            setErrorMessage(\n              `Information of ${name} has already been removed from server!`\n            );\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 3000);\n            setPersons(persons.filter((n) => n.id !== id));\n          })\n      : console.log();\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} messageType={msgType} />\n      <Filter newFilter={newFilter} filterChange={filterChange} />\n      <h3>Add a new</h3>\n      <PersonForm\n        addPerson={AddPerson}\n        newName={newName}\n        newNumber={newNumber}\n        nameChange={nameChange}\n        numberChange={numberChange}\n      />\n      <h3>Numbers</h3>\n      <Persons filterPerson={filterPerson} deletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}